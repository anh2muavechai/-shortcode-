- Create project: composer create-project laravel/laravel project_name
- Update lại composer:
	+ my-laravel-project
	+ composer self-update
	+ composer update
/*----------------------------------------------------------------------------------------------------------*/
/** Config vue js */
- php artisan make:auth (để tạo mẫu signup, login, logout.)
	-> sau khi chạy lệnh sẽ tạo ra các file mẫu trong thư mục resources\views\auth
- php artisan make:model Company -m
	-> tạo model và db
- php artisan make:controller Api/V1/CompaniesController --resource tạp Controller -> sửa code
- Thêm code vào routers/api.php
- Chạy lệnh: npm install && npm install vue-router
- npm run watch or npm run dev: để re compile mỗi khi thay đổi components

/*----------------------------------------------------------------------------------------------------------*/
** Router: **
- Thư mục routes/web.php
- Phương thức
// Route::get nhận resquest với phương thức GET.
// Route::post nhận resquest với phương thức POST.
// Route::put nhận resquest với phương thức PUT.
// Route::delete nhận resquest với phương thức DELETE.
// Route::match kết hợp nhiều phương phức như POST,GET,PUT,..
// Route::any nhận tất cả các phương thức.
// Route::group tạo ra các nhóm route.
// Route::controller gọi đến controller tương ứng mà chúng ta tự định.
// Route::resource sử dụng với resource controller.

Example: 1 số cách thường sử dụng
	- Route::get('name','controller@method'); ->domain/name
	- //Truyền dữ liệu qua view
		Route::get('/general/{ten}', function ($ten) {
		    return view('general',['ten' => $ten]);
		});
	- //Truyền tham số cho router
		Route::get('a/{name}/{age}','homecontroller@index')->where(['name'=>'[a-zA-Z]+','age'=>'[0-9]+']);
	- //Group các router
		Route::group([ ‘prefix’ => ‘MyGroup’ ] , function(){
			//Gọi Route User1: domain/MyGroup/User1
			Route::get(‘User1’, function(){ return ‘User1’ });
			//Gọi Route User2: domain/MyGroup/User2
			Route::get(‘User2’, function(){ return ‘User2’ });
			//Gọi Route User3: domain/MyGroup/User3
			Route::get(‘User3’, function(){ return ‘User3’ });
		});

/** Controller */
- Lưu tại thư mục: app/http/Controller
- Cú pháp tạo bằng artisan: php artisan make:controller [Name]Controller
- Có thể include 1 số thư viện để sử dụng(Khai báo ở đầu file):
	EX: use Illuminate\Support\Facades\DB;
- Return tới 1 view : return view('paginations', ['users' => $users]);
- 1 số cách thao tác với DB
	+ Eloquen:
		use App\City; //include model trước khi sử dụng
		$city = new City();
	    $data = $city::all()->toArray();//lấy tất cả record từ table
	+ Query builder: use DB; or use Illuminate\Support\Facades\DB; (thấy tùy phiên bản)
		- $data = DB::table('city')->get();
		- Với sql thuần:
			DB::select('select * from users where id = :id', ['id' => 1]);//tương tự với delete update
			DB::statement('drop table users');//thực thi 1 câu lệnh
- Transaction trong laravel
	DB::beginTransaction();
	// Bắt đầu các hành động trên CSDL

	...
	//Gặp lỗi nào đó mới rollback
	DB::rollBack();
	...

	//Commit dữ liệu khi hoàn thành kiểm tra
	DB::commit();

